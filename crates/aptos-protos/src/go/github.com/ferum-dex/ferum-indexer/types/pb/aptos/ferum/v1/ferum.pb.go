// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: aptos/extractor/v1/ferum.proto

package pbferum

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderSide int32

const (
	OrderSide_OrderSideNone OrderSide = 0
	OrderSide_OrderSideSell OrderSide = 1
	OrderSide_OrderSideBuy  OrderSide = 2
)

// Enum value maps for OrderSide.
var (
	OrderSide_name = map[int32]string{
		0: "OrderSideNone",
		1: "OrderSideSell",
		2: "OrderSideBuy",
	}
	OrderSide_value = map[string]int32{
		"OrderSideNone": 0,
		"OrderSideSell": 1,
		"OrderSideBuy":  2,
	}
)

func (x OrderSide) Enum() *OrderSide {
	p := new(OrderSide)
	*p = x
	return p
}

func (x OrderSide) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderSide) Descriptor() protoreflect.EnumDescriptor {
	return file_aptos_extractor_v1_ferum_proto_enumTypes[0].Descriptor()
}

func (OrderSide) Type() protoreflect.EnumType {
	return &file_aptos_extractor_v1_ferum_proto_enumTypes[0]
}

func (x OrderSide) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderSide.Descriptor instead.
func (OrderSide) EnumDescriptor() ([]byte, []int) {
	return file_aptos_extractor_v1_ferum_proto_rawDescGZIP(), []int{0}
}

type OrderType int32

const (
	OrderType_OrderTypeNone    OrderType = 0
	OrderType_OrderTypeResting OrderType = 1
	OrderType_OrderTypePost    OrderType = 2
	OrderType_OrderTypeIOC     OrderType = 3
	OrderType_OrderTypeFOK     OrderType = 4
)

// Enum value maps for OrderType.
var (
	OrderType_name = map[int32]string{
		0: "OrderTypeNone",
		1: "OrderTypeResting",
		2: "OrderTypePost",
		3: "OrderTypeIOC",
		4: "OrderTypeFOK",
	}
	OrderType_value = map[string]int32{
		"OrderTypeNone":    0,
		"OrderTypeResting": 1,
		"OrderTypePost":    2,
		"OrderTypeIOC":     3,
		"OrderTypeFOK":     4,
	}
)

func (x OrderType) Enum() *OrderType {
	p := new(OrderType)
	*p = x
	return p
}

func (x OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_aptos_extractor_v1_ferum_proto_enumTypes[1].Descriptor()
}

func (OrderType) Type() protoreflect.EnumType {
	return &file_aptos_extractor_v1_ferum_proto_enumTypes[1]
}

func (x OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType.Descriptor instead.
func (OrderType) EnumDescriptor() ([]byte, []int) {
	return file_aptos_extractor_v1_ferum_proto_rawDescGZIP(), []int{1}
}

type OrderStatus int32

const (
	OrderStatus_OrderStatusNone      OrderStatus = 0
	OrderStatus_OrderStatusPending   OrderStatus = 1
	OrderStatus_OrderStatusCancelled OrderStatus = 2
	OrderStatus_OrderStatusFilled    OrderStatus = 3
)

// Enum value maps for OrderStatus.
var (
	OrderStatus_name = map[int32]string{
		0: "OrderStatusNone",
		1: "OrderStatusPending",
		2: "OrderStatusCancelled",
		3: "OrderStatusFilled",
	}
	OrderStatus_value = map[string]int32{
		"OrderStatusNone":      0,
		"OrderStatusPending":   1,
		"OrderStatusCancelled": 2,
		"OrderStatusFilled":    3,
	}
)

func (x OrderStatus) Enum() *OrderStatus {
	p := new(OrderStatus)
	*p = x
	return p
}

func (x OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_aptos_extractor_v1_ferum_proto_enumTypes[2].Descriptor()
}

func (OrderStatus) Type() protoreflect.EnumType {
	return &file_aptos_extractor_v1_ferum_proto_enumTypes[2]
}

func (x OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatus.Descriptor instead.
func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_aptos_extractor_v1_ferum_proto_rawDescGZIP(), []int{2}
}

type CancelAgent int32

const (
	CancelAgent_CancelAgentNone CancelAgent = 0
	CancelAgent_CancelAgentIOC  CancelAgent = 1
	CancelAgent_CancelAgentFOK  CancelAgent = 2
	CancelAgent_CancelAgentUser CancelAgent = 3
	CancelAgent_CancelAgentPost CancelAgent = 4
)

// Enum value maps for CancelAgent.
var (
	CancelAgent_name = map[int32]string{
		0: "CancelAgentNone",
		1: "CancelAgentIOC",
		2: "CancelAgentFOK",
		3: "CancelAgentUser",
		4: "CancelAgentPost",
	}
	CancelAgent_value = map[string]int32{
		"CancelAgentNone": 0,
		"CancelAgentIOC":  1,
		"CancelAgentFOK":  2,
		"CancelAgentUser": 3,
		"CancelAgentPost": 4,
	}
)

func (x CancelAgent) Enum() *CancelAgent {
	p := new(CancelAgent)
	*p = x
	return p
}

func (x CancelAgent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CancelAgent) Descriptor() protoreflect.EnumDescriptor {
	return file_aptos_extractor_v1_ferum_proto_enumTypes[3].Descriptor()
}

func (CancelAgent) Type() protoreflect.EnumType {
	return &file_aptos_extractor_v1_ferum_proto_enumTypes[3]
}

func (x CancelAgent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CancelAgent.Descriptor instead.
func (CancelAgent) EnumDescriptor() ([]byte, []int) {
	return file_aptos_extractor_v1_ferum_proto_rawDescGZIP(), []int{3}
}

type OrderCreateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderID               *OrderID       `protobuf:"bytes,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
	OrderMetadata         *OrderMetadata `protobuf:"bytes,2,opt,name=orderMetadata,proto3" json:"orderMetadata,omitempty"`
	TimestampMicroSeconds uint64         `protobuf:"varint,3,opt,name=timestampMicroSeconds,proto3" json:"timestampMicroSeconds,omitempty"`
}

func (x *OrderCreateEvent) Reset() {
	*x = OrderCreateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptos_extractor_v1_ferum_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreateEvent) ProtoMessage() {}

func (x *OrderCreateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_aptos_extractor_v1_ferum_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreateEvent.ProtoReflect.Descriptor instead.
func (*OrderCreateEvent) Descriptor() ([]byte, []int) {
	return file_aptos_extractor_v1_ferum_proto_rawDescGZIP(), []int{0}
}

func (x *OrderCreateEvent) GetOrderID() *OrderID {
	if x != nil {
		return x.OrderID
	}
	return nil
}

func (x *OrderCreateEvent) GetOrderMetadata() *OrderMetadata {
	if x != nil {
		return x.OrderMetadata
	}
	return nil
}

func (x *OrderCreateEvent) GetTimestampMicroSeconds() uint64 {
	if x != nil {
		return x.TimestampMicroSeconds
	}
	return 0
}

type OrderFinalizeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderID               *OrderID       `protobuf:"bytes,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
	OrderMetadata         *OrderMetadata `protobuf:"bytes,2,opt,name=orderMetadata,proto3" json:"orderMetadata,omitempty"`
	CancelAgent           CancelAgent    `protobuf:"varint,3,opt,name=cancelAgent,proto3,enum=aptos.ferum.v1.CancelAgent" json:"cancelAgent,omitempty"`
	TimestampMicroSeconds uint64         `protobuf:"varint,4,opt,name=timestampMicroSeconds,proto3" json:"timestampMicroSeconds,omitempty"`
}

func (x *OrderFinalizeEvent) Reset() {
	*x = OrderFinalizeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptos_extractor_v1_ferum_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderFinalizeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderFinalizeEvent) ProtoMessage() {}

func (x *OrderFinalizeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_aptos_extractor_v1_ferum_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderFinalizeEvent.ProtoReflect.Descriptor instead.
func (*OrderFinalizeEvent) Descriptor() ([]byte, []int) {
	return file_aptos_extractor_v1_ferum_proto_rawDescGZIP(), []int{1}
}

func (x *OrderFinalizeEvent) GetOrderID() *OrderID {
	if x != nil {
		return x.OrderID
	}
	return nil
}

func (x *OrderFinalizeEvent) GetOrderMetadata() *OrderMetadata {
	if x != nil {
		return x.OrderMetadata
	}
	return nil
}

func (x *OrderFinalizeEvent) GetCancelAgent() CancelAgent {
	if x != nil {
		return x.CancelAgent
	}
	return CancelAgent_CancelAgentNone
}

func (x *OrderFinalizeEvent) GetTimestampMicroSeconds() uint64 {
	if x != nil {
		return x.TimestampMicroSeconds
	}
	return 0
}

type OrderExecutionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderID               *OrderID       `protobuf:"bytes,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
	OrderMetadata         *OrderMetadata `protobuf:"bytes,2,opt,name=orderMetadata,proto3" json:"orderMetadata,omitempty"`
	OppositeOrderID       *OrderID       `protobuf:"bytes,3,opt,name=oppositeOrderID,proto3" json:"oppositeOrderID,omitempty"`
	OppositeOrderMetadata *OrderMetadata `protobuf:"bytes,4,opt,name=oppositeOrderMetadata,proto3" json:"oppositeOrderMetadata,omitempty"`
	Price                 *FixedPoint64  `protobuf:"bytes,5,opt,name=price,proto3" json:"price,omitempty"`
	Qty                   *FixedPoint64  `protobuf:"bytes,6,opt,name=qty,proto3" json:"qty,omitempty"`
	TimestampMicroSeconds uint64         `protobuf:"varint,7,opt,name=timestampMicroSeconds,proto3" json:"timestampMicroSeconds,omitempty"`
}

func (x *OrderExecutionEvent) Reset() {
	*x = OrderExecutionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptos_extractor_v1_ferum_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderExecutionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderExecutionEvent) ProtoMessage() {}

func (x *OrderExecutionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_aptos_extractor_v1_ferum_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderExecutionEvent.ProtoReflect.Descriptor instead.
func (*OrderExecutionEvent) Descriptor() ([]byte, []int) {
	return file_aptos_extractor_v1_ferum_proto_rawDescGZIP(), []int{2}
}

func (x *OrderExecutionEvent) GetOrderID() *OrderID {
	if x != nil {
		return x.OrderID
	}
	return nil
}

func (x *OrderExecutionEvent) GetOrderMetadata() *OrderMetadata {
	if x != nil {
		return x.OrderMetadata
	}
	return nil
}

func (x *OrderExecutionEvent) GetOppositeOrderID() *OrderID {
	if x != nil {
		return x.OppositeOrderID
	}
	return nil
}

func (x *OrderExecutionEvent) GetOppositeOrderMetadata() *OrderMetadata {
	if x != nil {
		return x.OppositeOrderMetadata
	}
	return nil
}

func (x *OrderExecutionEvent) GetPrice() *FixedPoint64 {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *OrderExecutionEvent) GetQty() *FixedPoint64 {
	if x != nil {
		return x.Qty
	}
	return nil
}

func (x *OrderExecutionEvent) GetTimestampMicroSeconds() uint64 {
	if x != nil {
		return x.TimestampMicroSeconds
	}
	return 0
}

type PriceUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Quote `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PriceUpdateEvent) Reset() {
	*x = PriceUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptos_extractor_v1_ferum_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceUpdateEvent) ProtoMessage() {}

func (x *PriceUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_aptos_extractor_v1_ferum_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceUpdateEvent.ProtoReflect.Descriptor instead.
func (*PriceUpdateEvent) Descriptor() ([]byte, []int) {
	return file_aptos_extractor_v1_ferum_proto_rawDescGZIP(), []int{3}
}

func (x *PriceUpdateEvent) GetData() *Quote {
	if x != nil {
		return x.Data
	}
	return nil
}

type OrderID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Counter uint64 `protobuf:"varint,1,opt,name=counter,proto3" json:"counter,omitempty"`
	Owner   string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *OrderID) Reset() {
	*x = OrderID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptos_extractor_v1_ferum_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderID) ProtoMessage() {}

func (x *OrderID) ProtoReflect() protoreflect.Message {
	mi := &file_aptos_extractor_v1_ferum_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderID.ProtoReflect.Descriptor instead.
func (*OrderID) Descriptor() ([]byte, []int) {
	return file_aptos_extractor_v1_ferum_proto_rawDescGZIP(), []int{4}
}

func (x *OrderID) GetCounter() uint64 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *OrderID) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

type OrderMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstrumentType   *TypeInfo     `protobuf:"bytes,1,opt,name=instrumentType,proto3" json:"instrumentType,omitempty"`
	QuoteType        *TypeInfo     `protobuf:"bytes,2,opt,name=quoteType,proto3" json:"quoteType,omitempty"`
	Side             OrderSide     `protobuf:"varint,3,opt,name=side,proto3,enum=aptos.ferum.v1.OrderSide" json:"side,omitempty"`
	RemainingQty     *FixedPoint64 `protobuf:"bytes,4,opt,name=remainingQty,proto3" json:"remainingQty,omitempty"`
	OriginalQty      *FixedPoint64 `protobuf:"bytes,5,opt,name=originalQty,proto3" json:"originalQty,omitempty"`
	Price            *FixedPoint64 `protobuf:"bytes,6,opt,name=price,proto3" json:"price,omitempty"`
	Type             OrderType     `protobuf:"varint,7,opt,name=type,proto3,enum=aptos.ferum.v1.OrderType" json:"type,omitempty"`
	Status           OrderStatus   `protobuf:"varint,8,opt,name=status,proto3,enum=aptos.ferum.v1.OrderStatus" json:"status,omitempty"`
	ClientOrderID    string        `protobuf:"bytes,9,opt,name=clientOrderID,proto3" json:"clientOrderID,omitempty"`
	ExecutionCounter uint64        `protobuf:"varint,10,opt,name=executionCounter,proto3" json:"executionCounter,omitempty"`
	UpdateCounter    uint64        `protobuf:"varint,11,opt,name=updateCounter,proto3" json:"updateCounter,omitempty"`
}

func (x *OrderMetadata) Reset() {
	*x = OrderMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptos_extractor_v1_ferum_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderMetadata) ProtoMessage() {}

func (x *OrderMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_aptos_extractor_v1_ferum_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderMetadata.ProtoReflect.Descriptor instead.
func (*OrderMetadata) Descriptor() ([]byte, []int) {
	return file_aptos_extractor_v1_ferum_proto_rawDescGZIP(), []int{5}
}

func (x *OrderMetadata) GetInstrumentType() *TypeInfo {
	if x != nil {
		return x.InstrumentType
	}
	return nil
}

func (x *OrderMetadata) GetQuoteType() *TypeInfo {
	if x != nil {
		return x.QuoteType
	}
	return nil
}

func (x *OrderMetadata) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_OrderSideNone
}

func (x *OrderMetadata) GetRemainingQty() *FixedPoint64 {
	if x != nil {
		return x.RemainingQty
	}
	return nil
}

func (x *OrderMetadata) GetOriginalQty() *FixedPoint64 {
	if x != nil {
		return x.OriginalQty
	}
	return nil
}

func (x *OrderMetadata) GetPrice() *FixedPoint64 {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *OrderMetadata) GetType() OrderType {
	if x != nil {
		return x.Type
	}
	return OrderType_OrderTypeNone
}

func (x *OrderMetadata) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_OrderStatusNone
}

func (x *OrderMetadata) GetClientOrderID() string {
	if x != nil {
		return x.ClientOrderID
	}
	return ""
}

func (x *OrderMetadata) GetExecutionCounter() uint64 {
	if x != nil {
		return x.ExecutionCounter
	}
	return 0
}

func (x *OrderMetadata) GetUpdateCounter() uint64 {
	if x != nil {
		return x.UpdateCounter
	}
	return 0
}

type Quote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstrumentType        *TypeInfo     `protobuf:"bytes,1,opt,name=instrumentType,proto3" json:"instrumentType,omitempty"`
	QuoteType             *TypeInfo     `protobuf:"bytes,2,opt,name=quoteType,proto3" json:"quoteType,omitempty"`
	MaxBid                *FixedPoint64 `protobuf:"bytes,3,opt,name=maxBid,proto3" json:"maxBid,omitempty"`
	BidSize               *FixedPoint64 `protobuf:"bytes,4,opt,name=bidSize,proto3" json:"bidSize,omitempty"`
	MinAsk                *FixedPoint64 `protobuf:"bytes,5,opt,name=minAsk,proto3" json:"minAsk,omitempty"`
	AskSize               *FixedPoint64 `protobuf:"bytes,6,opt,name=askSize,proto3" json:"askSize,omitempty"`
	TimestampMicroSeconds uint64        `protobuf:"varint,7,opt,name=timestampMicroSeconds,proto3" json:"timestampMicroSeconds,omitempty"`
}

func (x *Quote) Reset() {
	*x = Quote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptos_extractor_v1_ferum_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quote) ProtoMessage() {}

func (x *Quote) ProtoReflect() protoreflect.Message {
	mi := &file_aptos_extractor_v1_ferum_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quote.ProtoReflect.Descriptor instead.
func (*Quote) Descriptor() ([]byte, []int) {
	return file_aptos_extractor_v1_ferum_proto_rawDescGZIP(), []int{6}
}

func (x *Quote) GetInstrumentType() *TypeInfo {
	if x != nil {
		return x.InstrumentType
	}
	return nil
}

func (x *Quote) GetQuoteType() *TypeInfo {
	if x != nil {
		return x.QuoteType
	}
	return nil
}

func (x *Quote) GetMaxBid() *FixedPoint64 {
	if x != nil {
		return x.MaxBid
	}
	return nil
}

func (x *Quote) GetBidSize() *FixedPoint64 {
	if x != nil {
		return x.BidSize
	}
	return nil
}

func (x *Quote) GetMinAsk() *FixedPoint64 {
	if x != nil {
		return x.MinAsk
	}
	return nil
}

func (x *Quote) GetAskSize() *FixedPoint64 {
	if x != nil {
		return x.AskSize
	}
	return nil
}

func (x *Quote) GetTimestampMicroSeconds() uint64 {
	if x != nil {
		return x.TimestampMicroSeconds
	}
	return 0
}

type TypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountAddress string `protobuf:"bytes,1,opt,name=account_address,proto3" json:"account_address,omitempty"`
	ModuleName     string `protobuf:"bytes,2,opt,name=module_name,proto3" json:"module_name,omitempty"`
	StructName     string `protobuf:"bytes,3,opt,name=struct_name,proto3" json:"struct_name,omitempty"`
}

func (x *TypeInfo) Reset() {
	*x = TypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptos_extractor_v1_ferum_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeInfo) ProtoMessage() {}

func (x *TypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_aptos_extractor_v1_ferum_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeInfo.ProtoReflect.Descriptor instead.
func (*TypeInfo) Descriptor() ([]byte, []int) {
	return file_aptos_extractor_v1_ferum_proto_rawDescGZIP(), []int{7}
}

func (x *TypeInfo) GetAccountAddress() string {
	if x != nil {
		return x.AccountAddress
	}
	return ""
}

func (x *TypeInfo) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

func (x *TypeInfo) GetStructName() string {
	if x != nil {
		return x.StructName
	}
	return ""
}

type FixedPoint64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val uint64 `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *FixedPoint64) Reset() {
	*x = FixedPoint64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptos_extractor_v1_ferum_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixedPoint64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixedPoint64) ProtoMessage() {}

func (x *FixedPoint64) ProtoReflect() protoreflect.Message {
	mi := &file_aptos_extractor_v1_ferum_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixedPoint64.ProtoReflect.Descriptor instead.
func (*FixedPoint64) Descriptor() ([]byte, []int) {
	return file_aptos_extractor_v1_ferum_proto_rawDescGZIP(), []int{8}
}

func (x *FixedPoint64) GetVal() uint64 {
	if x != nil {
		return x.Val
	}
	return 0
}

var File_aptos_extractor_v1_ferum_proto protoreflect.FileDescriptor

var file_aptos_extractor_v1_ferum_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x72, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72, 0x75, 0x6d, 0x2e, 0x76, 0x31,
	0x22, 0xc0, 0x01, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x66,
	0x65, 0x72, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x43, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72, 0x75, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0d,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a,
	0x15, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x22, 0x81, 0x02, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70,
	0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x43, 0x0a,
	0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72,
	0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e,
	0x66, 0x65, 0x72, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x69,
	0x63, 0x72, 0x6f, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x15, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x69, 0x63, 0x72, 0x6f,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0xbf, 0x03, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x31, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72, 0x75, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x43, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x74, 0x6f,
	0x73, 0x2e, 0x66, 0x65, 0x72, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x0f, 0x6f, 0x70, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72, 0x75, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x52, 0x0f, 0x6f, 0x70, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x53, 0x0a, 0x15, 0x6f, 0x70,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x74, 0x6f,
	0x73, 0x2e, 0x66, 0x65, 0x72, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x15, 0x6f, 0x70, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x32, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x03, 0x71, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72, 0x75, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x03,
	0x71, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x4d, 0x69, 0x63, 0x72, 0x6f, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x15, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x69, 0x63,
	0x72, 0x6f, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x3d, 0x0a, 0x10, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70,
	0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x6f,
	0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x39, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x22, 0xca, 0x04, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x74,
	0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2d, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x40,
	0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x51, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72,
	0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x51, 0x74, 0x79,
	0x12, 0x3e, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x51, 0x74, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65,
	0x72, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x51, 0x74, 0x79,
	0x12, 0x32, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72, 0x75, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72, 0x75, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72, 0x75,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2a,
	0x0a, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x22, 0x93, 0x03, 0x0a, 0x05, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72, 0x75, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x09,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72, 0x75, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x6d, 0x61, 0x78, 0x42, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72,
	0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x42, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x07, 0x62, 0x69,
	0x64, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70,
	0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x07, 0x62, 0x69, 0x64, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x41, 0x73, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x65, 0x72, 0x75, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x52, 0x06, 0x6d, 0x69, 0x6e, 0x41, 0x73, 0x6b, 0x12, 0x36, 0x0a, 0x07, 0x61, 0x73, 0x6b, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x74, 0x6f,
	0x73, 0x2e, 0x66, 0x65, 0x72, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x07, 0x61, 0x73, 0x6b, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x34, 0x0a, 0x15, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x69, 0x63,
	0x72, 0x6f, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x15, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x78, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x20, 0x0a, 0x0c, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x76,
	0x61, 0x6c, 0x2a, 0x43, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12,
	0x11, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x4e, 0x6f, 0x6e, 0x65,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53,
	0x65, 0x6c, 0x6c, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x42, 0x75, 0x79, 0x10, 0x02, 0x2a, 0x6b, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x11, 0x0a,
	0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x10, 0x02,
	0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x4f, 0x43,
	0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x46,
	0x4f, 0x4b, 0x10, 0x04, 0x2a, 0x6b, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01,
	0x12, 0x18, 0x0a, 0x14, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x10,
	0x03, 0x2a, 0x74, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x12, 0x13, 0x0a, 0x0f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e,
	0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x4f, 0x43, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x46, 0x4f, 0x4b, 0x10, 0x02, 0x12, 0x13, 0x0a,
	0x0f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x50, 0x6f, 0x73, 0x74, 0x10, 0x04, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x65, 0x72, 0x75, 0x6d, 0x2d, 0x64, 0x65, 0x78, 0x2f,
	0x66, 0x65, 0x72, 0x75, 0x6d, 0x2d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2f, 0x66, 0x65, 0x72,
	0x75, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x62, 0x66, 0x65, 0x72, 0x75, 0x6d, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aptos_extractor_v1_ferum_proto_rawDescOnce sync.Once
	file_aptos_extractor_v1_ferum_proto_rawDescData = file_aptos_extractor_v1_ferum_proto_rawDesc
)

func file_aptos_extractor_v1_ferum_proto_rawDescGZIP() []byte {
	file_aptos_extractor_v1_ferum_proto_rawDescOnce.Do(func() {
		file_aptos_extractor_v1_ferum_proto_rawDescData = protoimpl.X.CompressGZIP(file_aptos_extractor_v1_ferum_proto_rawDescData)
	})
	return file_aptos_extractor_v1_ferum_proto_rawDescData
}

var file_aptos_extractor_v1_ferum_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_aptos_extractor_v1_ferum_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_aptos_extractor_v1_ferum_proto_goTypes = []interface{}{
	(OrderSide)(0),              // 0: aptos.ferum.v1.OrderSide
	(OrderType)(0),              // 1: aptos.ferum.v1.OrderType
	(OrderStatus)(0),            // 2: aptos.ferum.v1.OrderStatus
	(CancelAgent)(0),            // 3: aptos.ferum.v1.CancelAgent
	(*OrderCreateEvent)(nil),    // 4: aptos.ferum.v1.OrderCreateEvent
	(*OrderFinalizeEvent)(nil),  // 5: aptos.ferum.v1.OrderFinalizeEvent
	(*OrderExecutionEvent)(nil), // 6: aptos.ferum.v1.OrderExecutionEvent
	(*PriceUpdateEvent)(nil),    // 7: aptos.ferum.v1.PriceUpdateEvent
	(*OrderID)(nil),             // 8: aptos.ferum.v1.OrderID
	(*OrderMetadata)(nil),       // 9: aptos.ferum.v1.OrderMetadata
	(*Quote)(nil),               // 10: aptos.ferum.v1.Quote
	(*TypeInfo)(nil),            // 11: aptos.ferum.v1.TypeInfo
	(*FixedPoint64)(nil),        // 12: aptos.ferum.v1.FixedPoint64
}
var file_aptos_extractor_v1_ferum_proto_depIdxs = []int32{
	8,  // 0: aptos.ferum.v1.OrderCreateEvent.orderID:type_name -> aptos.ferum.v1.OrderID
	9,  // 1: aptos.ferum.v1.OrderCreateEvent.orderMetadata:type_name -> aptos.ferum.v1.OrderMetadata
	8,  // 2: aptos.ferum.v1.OrderFinalizeEvent.orderID:type_name -> aptos.ferum.v1.OrderID
	9,  // 3: aptos.ferum.v1.OrderFinalizeEvent.orderMetadata:type_name -> aptos.ferum.v1.OrderMetadata
	3,  // 4: aptos.ferum.v1.OrderFinalizeEvent.cancelAgent:type_name -> aptos.ferum.v1.CancelAgent
	8,  // 5: aptos.ferum.v1.OrderExecutionEvent.orderID:type_name -> aptos.ferum.v1.OrderID
	9,  // 6: aptos.ferum.v1.OrderExecutionEvent.orderMetadata:type_name -> aptos.ferum.v1.OrderMetadata
	8,  // 7: aptos.ferum.v1.OrderExecutionEvent.oppositeOrderID:type_name -> aptos.ferum.v1.OrderID
	9,  // 8: aptos.ferum.v1.OrderExecutionEvent.oppositeOrderMetadata:type_name -> aptos.ferum.v1.OrderMetadata
	12, // 9: aptos.ferum.v1.OrderExecutionEvent.price:type_name -> aptos.ferum.v1.FixedPoint64
	12, // 10: aptos.ferum.v1.OrderExecutionEvent.qty:type_name -> aptos.ferum.v1.FixedPoint64
	10, // 11: aptos.ferum.v1.PriceUpdateEvent.data:type_name -> aptos.ferum.v1.Quote
	11, // 12: aptos.ferum.v1.OrderMetadata.instrumentType:type_name -> aptos.ferum.v1.TypeInfo
	11, // 13: aptos.ferum.v1.OrderMetadata.quoteType:type_name -> aptos.ferum.v1.TypeInfo
	0,  // 14: aptos.ferum.v1.OrderMetadata.side:type_name -> aptos.ferum.v1.OrderSide
	12, // 15: aptos.ferum.v1.OrderMetadata.remainingQty:type_name -> aptos.ferum.v1.FixedPoint64
	12, // 16: aptos.ferum.v1.OrderMetadata.originalQty:type_name -> aptos.ferum.v1.FixedPoint64
	12, // 17: aptos.ferum.v1.OrderMetadata.price:type_name -> aptos.ferum.v1.FixedPoint64
	1,  // 18: aptos.ferum.v1.OrderMetadata.type:type_name -> aptos.ferum.v1.OrderType
	2,  // 19: aptos.ferum.v1.OrderMetadata.status:type_name -> aptos.ferum.v1.OrderStatus
	11, // 20: aptos.ferum.v1.Quote.instrumentType:type_name -> aptos.ferum.v1.TypeInfo
	11, // 21: aptos.ferum.v1.Quote.quoteType:type_name -> aptos.ferum.v1.TypeInfo
	12, // 22: aptos.ferum.v1.Quote.maxBid:type_name -> aptos.ferum.v1.FixedPoint64
	12, // 23: aptos.ferum.v1.Quote.bidSize:type_name -> aptos.ferum.v1.FixedPoint64
	12, // 24: aptos.ferum.v1.Quote.minAsk:type_name -> aptos.ferum.v1.FixedPoint64
	12, // 25: aptos.ferum.v1.Quote.askSize:type_name -> aptos.ferum.v1.FixedPoint64
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_aptos_extractor_v1_ferum_proto_init() }
func file_aptos_extractor_v1_ferum_proto_init() {
	if File_aptos_extractor_v1_ferum_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aptos_extractor_v1_ferum_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptos_extractor_v1_ferum_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderFinalizeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptos_extractor_v1_ferum_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderExecutionEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptos_extractor_v1_ferum_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptos_extractor_v1_ferum_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptos_extractor_v1_ferum_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptos_extractor_v1_ferum_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptos_extractor_v1_ferum_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptos_extractor_v1_ferum_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixedPoint64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aptos_extractor_v1_ferum_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aptos_extractor_v1_ferum_proto_goTypes,
		DependencyIndexes: file_aptos_extractor_v1_ferum_proto_depIdxs,
		EnumInfos:         file_aptos_extractor_v1_ferum_proto_enumTypes,
		MessageInfos:      file_aptos_extractor_v1_ferum_proto_msgTypes,
	}.Build()
	File_aptos_extractor_v1_ferum_proto = out.File
	file_aptos_extractor_v1_ferum_proto_rawDesc = nil
	file_aptos_extractor_v1_ferum_proto_goTypes = nil
	file_aptos_extractor_v1_ferum_proto_depIdxs = nil
}
